# Java Gradle CircleCI 2.0 configuration file
# See: https://circleci.com/docs/2.0/language-java/
version: 2

defaults: &defaults
  # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
  # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
  docker:
    # specify the version you desire here
    - image: circleci/android:api-30

    # Specify service dependencies here if necessary
    # CircleCI maintains a library of pre-built images
    # documented at https://circleci.com/docs/2.0/circleci-images/
    # - image: circleci/postgres:9.4

  working_directory: ~/repo

  environment:
    # Customize the JVM maximum heap limit
    JVM_OPTS: -Xmx3200m
    TERM: dumb

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build_workspace:
    <<: *defaults
    steps:
      - checkout
      restore_cache:
          key: 1-gems-{{ checksum "Gemfile.lock" }}
      - run: bundle check || bundle install --path vendor/bundle
      - save_cache:
          key: 1-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
  
  test:
    <<: *defaults
    steps:
      - run:
          name: Run Tests
          command: ./gradlew lint test
  
  release_development_build:
    <<: *defaults
    steps:
      - run:
          name: Fastlane - Build developement build and upload to AppCenter
          command: bundle exec fastlane android development_release
          no_output_timeout: 30m
      - store_artifacts:
          path: output

# Workflows
workflows:
  version: 2
  
  development:
    jobs:
      - build_workspace:
          filters:
            branches:
              only:
                - development
      - release_development_build:
          requires:
            - build_workspace

